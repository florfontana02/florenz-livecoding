const amps = [
  "{0.8}",
  "0.3 0.8".fast(4),
  "{0.3 0.8!6 0.3 0.8!2 0.3 0.8!3 0.3 1}",
  "{0.3 0.8!3 0.3 0.8!2 0.3 0.8!3 0.3 0.8!2 0.3 0.8}%16",
  "{0.4 1!9 0.4 1!5 0.4 1!7 0.4 1!3 <1 0.4> 1}%16" 
]

const patterns = [
  "{~}","x*4","{x ~!6 x ~ ~ x ~!3 x ~}%8",
  "{x ~!3 x ~!3 x ~!2 x ~}%4",
  "{x ~!9 x ~!5 x ~ x ~!7 x ~!3 <~ x> ~}%8"
]


const xops = [ ".12@2 .5!2",
               ".81!2 .67!2",
               rand.seg(8)
]


let bpm = 128
let cpm = bpm / 4


//░▒▓████████▓▒░▒▓█▓▒░      ░▒▓██████▓▒░░▒▓███████▓▒░░▒▓████████▓▒░▒▓███████▓▒░░▒▓████████▓▒░ 
//░▒▓█▓▒░      ░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░      ░▒▓█▓▒░ 
//░▒▓█▓▒░      ░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░    ░▒▓██▓▒░  
//░▒▓██████▓▒░ ░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓███████▓▒░░▒▓██████▓▒░ ░▒▓█▓▒░░▒▓█▓▒░  ░▒▓██▓▒░    
//░▒▓█▓▒░      ░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░░▒▓██▓▒░      
//░▒▓█▓▒░      ░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░        
//░▒▓█▓▒░      ░▒▓████████▓▒░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓████████▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓████████▓▒░  


await loadOrc('github:kunstmusik/csound-live-code/master/livecode.orc')
samples({
  xanx: 'sort chanch.wav'
}, 'https://raw.githubusercontent.com/florfontana02/florenz-livecoding/main/samples/')


const unaXuna = cat("[1 0 0 0]","[0 1 0 0]","[0 0 1 0]","[0 0 0 0]").slow(2)
let index = 1

let acorde = note("<C^7 A7 Dm7 Fm7>/2".voicings('lefthand'))
  .cutoff(sine.range(500,2000).round().slow(16))
  .euclidLegato(3,8).csound('Sub7').slow(2).gain(1)

let bass = note("<[C2 C3 C2 C3] [A1 A2 A1 A2] [D2 D3 D2 D3] [F2 F3 F2 F3]>/2").ply(2).csound('Bass').gain("1 2 1 2").slow(2)

let melo = note("0 7 [4 3] 2".fast(2/3).off(".25 .125",add("<1 -1>")).slow(2).scale('A4:minor')).legato(.25)
  .csound('Sub2').slow(2).gain(3)


let cansion = stack(acorde, bass,melo)

let fx_de_muger = slider(0,0,1)

let pasabaja = slider(6000, 200,6000) 
let pasalta = slider(8000,  20, 8000)  

let masc = "<1 1 1 1 1 1 1 1>"     


let drumz = stack(

s("rim").bank("RolandTR808").struct(pick(patterns, index)).gain(0.4),
s(" [~ cp]").bank("KorgDDM110").postgain(0.4).lpf(3000).slow(2),
s("hh hh").bank("RolandTR808").room(.2).gain(1).fast(2).lpf(3000),
s("{~ rim rim ~ cp ~ rim cp ~!2 rim ~ cp ~ <rim ~>!2}%4").bank("KorgDDM110").speed(1.2).gain(0.4).lpf(2000),
 s("bd").bank("RolandTR909").room(0.3).gain(1),
//s("~ cp").bank("RolandTR909").gain(0.9).slow(2).decay(0.1)
 
     ).lpf(pasabaja).hpf(fx_de_muger.range(200,8000)).room(fx_de_muger).mask(masc)
  ._punchcard({width:4000, weight:1000})

let xanx = s("xanx")                                                                                        //xanx
//.begin(.0).end(1).attack(.25)
.scrub(irand(5).div(5).seg(2).rib("<0 1 2 3 1 0 3 0>",1))               
//.scrub(irand(5).div(5).seg(4).rib("<0 5 6 6 7 3>",1))


let bucals = xanx
  .lpf(slider(4921.2,200,6000))           
  .attack(.1).room(0.3).rsize(2)
  .gain(slider(0.733,0,1))//.phaser(.3)
  .delay(".25:.45:.4").slow(2).hpf(fx_de_muger.range(200,8000)).room(fx_de_muger)
  ._scope({height:100, width:10000, weight:300})

//dale_play = song1

let musik = stack(cansion).hpf(fx_de_muger.range(200,8000)).room(fx_de_muger).lpf(pasabaja)._punchcard({width:4000, height: 200})

stack(drumz,bucals, musik).cpm(cpm).fast(4)



                                                                                                                                                                                                
// ██╗   ██╗ █████╗ ███╗   ██╗     █████╗     ███████╗ ██████╗ ██████╗ ████████╗███████╗ █████╗ ██████╗ 
// ██║   ██║██╔══██╗████╗  ██║    ██╔══██╗    ██╔════╝██╔═══██╗██╔══██╗╚══██╔══╝██╔════╝██╔══██╗██╔══██╗
// ██║   ██║███████║██╔██╗ ██║    ███████║    ███████╗██║   ██║██████╔╝   ██║   █████╗  ███████║██████╔╝
// ╚██╗ ██╔╝██╔══██║██║╚██╗██║    ██╔══██║    ╚════██║██║   ██║██╔══██╗   ██║   ██╔══╝  ██╔══██║██╔══██╗
//  ╚████╔╝ ██║  ██║██║ ╚████║    ██║  ██║    ███████║╚██████╔╝██║  ██║   ██║   ███████╗██║  ██║██║  ██║
//   ╚═══╝  ╚═╝  ╚═╝╚═╝  ╚═══╝    ╚═╝  ╚═╝    ╚══════╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝

// ███████╗██╗          ██████╗██╗  ██╗ █████╗ ███╗   ██╗ ██████╗██╗  ██╗ ██████╗     ██████╗ 
// ██╔════╝██║         ██╔════╝██║  ██║██╔══██╗████╗  ██║██╔════╝██║  ██║██╔═══██╗    ╚════██╗
// █████╗  ██║         ██║     ███████║███████║██╔██╗ ██║██║     ███████║██║   ██║      ▄███╔╝
// ██╔══╝  ██║         ██║     ██╔══██║██╔══██║██║╚██╗██║██║     ██╔══██║██║   ██║      ▀▀══╝ 
// ███████╗███████╗    ╚██████╗██║  ██║██║  ██║██║ ╚████║╚██████╗██║  ██║╚██████╔╝      ██╗   
// ╚══════╝╚══════╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝╚═╝  ╚═╝ ╚═════╝       ╚═╝                                                                                                                                                                                                                                                          
//                                                                                                    )\   /|      
//                                                                                                 .-/'-|_/ |
//                                                                              __            __,-' (   / \/          
//                                                                          .-'"  "'-..__,-'""          -o.`-._   
//                                                                         /                                   '/
//                                                                 *--._ ./                                 _.-- 
//                                                                       |                              _.-' 
//                                                                       :                           .-/   
//                                                                        \                       )_ /
//                                                                         \                _)   / \(
//                                                                           `.   /-.___.---'(  /   \\
//                                                                            (  /   \\       \(     L\
//                                                                             \(     L\       \\
//                                                                              \\              \\
//                                                                               L\              L\
          





